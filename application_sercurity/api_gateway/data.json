{
    "uuid": "",
    "lastMigration": 29,
    "name": "Tutorial - Generate mock data",
    "endpointPrefix": "",
    "latency": 0,
    "port": 3001,
    "routes": [
      {
        "uuid": "",
        "documentation": "Get a list of posts (JSON)",
        "method": "get",
        "endpoint": "posts",
        "responses": [
          {
            "uuid": "",
            "body": "[\r\n  {{#repeat (queryParam 'total' '3')}}\r\n  {\r\n    \"id\": {{@index}},\r\n    \"title\": \"{{faker 'lorem.sentence'}}\",\r\n    \"content\": \"{{faker 'lorem.sentences'}}\",\r\n    \"media\": \"{{faker 'image.urlLoremFlickr'category=\"nature\"}}\",\r\n    \"author\": {\r\n      \"name\": \"{{faker 'person.firstName'}} {{faker 'person.lastName'}}\",\r\n      \"avatar\": \"{{faker 'image.avatar'}}\"\r\n    },\r\n    \"comments\": [\r\n      {{#repeat (faker 'string.numeric' 1)}}\r\n      {\r\n        \"id\": \"{{faker 'string.uuid'}}\",\r\n        \"content\": \"{{faker 'lorem.sentence'}}\",\r\n        \"author\": {\r\n          \"name\": \"{{faker 'person.firstName'}} {{faker 'person.firstName'}}\",\r\n          \"avatar\": \"{{faker 'image.avatar'}}\"\r\n        }\r\n      }\r\n      {{/repeat}}\r\n    ],\r\n    \"likes\": {{faker 'string.numeric' 100}},\r\n    \"shares\": {{faker 'string.numeric' 100}},\r\n    \"location\": {\r\n      \"lat\": {{faker 'location.latitude'}},\r\n      \"long\": {{faker 'location.longitude'}}\r\n    },\r\n    \"archived\": {{faker 'datatype.boolean'}}\r\n  }\r\n  {{/repeat}}\r\n]",
            "latency": 0,
            "statusCode": 200,
            "label": "Success",
            "headers": [{ "key": "", "value": "" }],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false,
            "default": true,
            "databucketID": "",
            "bodyType": "INLINE",
            "crudKey": "id"
          }
        ],
        "enabled": true,
        "responseMode": null,
        "type": "http"
      },
      {
        "uuid": "",
        "documentation": "Get a list of location (CSV)",
        "method": "get",
        "endpoint": "geoData",
        "responses": [
          {
            "uuid": "",
            "body": "city,state,address,latitude,longitude,timezone\r\n{{#repeat 5000}}\r\n{{faker 'location.city'}},{{faker 'location.stateAbbr'}},{{faker 'location.streetAddress'}},{{faker 'location.latitude'}},{{faker 'location.longitude'}},{{faker 'location.timeZone'}}\r\n{{/repeat}}",
            "latency": 0,
            "statusCode": 200,
            "label": "Success",
            "headers": [{ "key": "Content-Type", "value": "text/csv" }],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false,
            "default": true,
            "databucketID": "",
            "bodyType": "INLINE",
            "crudKey": "id"
          }
        ],
        "enabled": true,
        "responseMode": null,
        "type": "http"
      },
      {
        "uuid": "",
        "documentation": "Get a list of products (XML)",
        "method": "get",
        "endpoint": "products",
        "responses": [
          {
            "uuid": "",
            "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<PRODUCTS>\r\n  {{# repeat 50}}\r\n  <PRODUCT>\r\n    <UUID>{{faker 'string.uuid'}}</UUID>\r\n    <NAME>{{faker 'commerce.product'}}</NAME>\r\n    <PRICE>{{faker 'commerce.price'}}</PRICE>\r\n    <COLOR>{{faker 'color.human'}}</COLOR>\r\n    <INVENTORY>{{faker 'string.numeric' 50}}</INVENTORY>\r\n  </PRODUCT>\r\n  {{/ repeat}}\r\n</PRODUCTS>",
            "latency": 0,
            "statusCode": 200,
            "label": "",
            "headers": [{ "key": "Content-Type", "value": "application/xml" }],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false,
            "default": true,
            "databucketID": "",
            "bodyType": "INLINE",
            "crudKey": "id"
          }
        ],
        "enabled": true,
        "responseMode": null,
        "type": "http"
      },
      {
        "uuid": "",
        "documentation": "Create a user",
        "method": "post",
        "endpoint": "users",
        "responses": [
          {
            "uuid": "",
            "body": "{\r\n  \"id\": \"{{faker 'string.uuid'}}\",\r\n  \"firstname\": \"{{body 'firstname'}}\",\r\n  \"lastname\": \"{{body 'lastname'}}\",\r\n  \"birthdate\": \"{{body 'birthdate'}}\",\r\n  \"email\": \"{{body 'email'}}\",\r\n  \"createdAt\": \"{{now}}\"\r\n}",
            "latency": 0,
            "statusCode": 201,
            "label": "Created",
            "headers": [{ "key": "", "value": "" }],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false,
            "default": true,
            "databucketID": "",
            "bodyType": "INLINE",
            "crudKey": "id"
          }
        ],
        "enabled": true,
        "responseMode": null,
        "type": "http"
      },
      {
        "uuid": "",
        "documentation": "Get a list of products or materials",
        "method": "get",
        "endpoint": "inventory/:type",
        "responses": [
          {
            "uuid": "",
            "body": "[\r\n  {{#repeat (queryParam 'total' '5')}}\r\n  {\r\n    \"id\": \"{{faker 'string.uuid'}}\",\r\n    {{# switch (urlParam 'type')}}\r\n    {{# case 'products'}}\r\n    \"name\": \"{{faker 'commerce.product'}}\",\r\n    \"price\": \"{{faker 'commerce.price'}} EUR\"\r\n    {{/ case}}\r\n    {{# case 'materials'}}\r\n    \"name\": \"{{faker 'commerce.productMaterial'}}\",\r\n    \"quantity\": \"{{faker 'string.numeric' 50}}\"\r\n    {{/ case}}\r\n    {{/ switch}}\r\n  }\r\n  {{/repeat}}\r\n]",
            "latency": 0,
            "statusCode": 200,
            "label": "Success",
            "headers": [{ "key": "", "value": "" }],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false,
            "default": true,
            "databucketID": "",
            "bodyType": "INLINE",
            "crudKey": "id"
          }
        ],
        "enabled": true,
        "responseMode": null,
        "type": "http"
      }
    ],
    "proxyMode": false,
    "proxyHost": "",
    "cors": true,
    "headers": [{ "key": "Content-Type", "value": "application/json" }],
    "proxyReqHeaders": [{ "key": "", "value": "" }],
    "proxyResHeaders": [{ "key": "", "value": "" }],
    "proxyRemovePrefix": false,
    "hostname": "",
    "tlsOptions": {
      "enabled": false,
      "type": "CERT",
      "pfxPath": "",
      "certPath": "",
      "keyPath": "",
      "caPath": "",
      "passphrase": ""
    },
    "data": [],
    "folders": [],
    "rootChildren": [
      { "type": "route", "uuid": "" },
      { "type": "route", "uuid": "" },
      { "type": "route", "uuid": "" },
      { "type": "route", "uuid": "" },
      { "type": "route", "uuid": "" }
    ]
  }

  